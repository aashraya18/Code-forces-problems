*****QUESTION******
The cell with coordinates (x,y) is at the intersection of x-th row and y-th column. Upper left cell (1,1) contains an integer 1.
The developers of the SUM function don't sleep either. Because of the boredom, they teamed up with the developers of the RAND function, so they added the ability to calculate the sum on an arbitrary path from one cell to another, moving down or right. Formally, from the cell (x,y) in one step you can move to the cell (x+1,y) or (x,y+1).

Calculate the quantity of possible different amounts on the path from a given cell (x1,y1) to another given cell (x2,y2), if you can only move one cell down or right.

Formally, consider all the paths from the cell (x1,y1) to cell (x2,y2) such that each next cell in the path is located either to the down or to the right of the previous one. Calculate the number of different sums of elements for all such paths.
(Basically find the number of paths between the two given points; given that traversal through squares can take place by going down or going to the right)
**********************

#include <iostream>

using namespace std;

int main() {
    int t;
    cin >> t;
    while (q--) {
        long long a, b, c, d;
        cin >> a >> b >> c >> d;
        cout << (c - a) * (d - b) + 1 << '\n';//REMEMBER THIS RULE TO FIND THE TOTAL NUMBER OF PATHS BETWEEN TWO POINTS WITH TRAVERSAL IN ONLY TWO DIRECTIONS
    }
}
